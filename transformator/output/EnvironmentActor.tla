---- MODULE EnvironmentActor ----
\****
\* This file is automatically generated from the environment.ral

EXTENDS ActorBase

----
\****
\* Constants

CONSTANTS EnvironmentActorConstant_n

ASSUME /\ EnvironmentActorConstant_n \in NatType


ASSUME /\ EnvironmentActorConstant_n \in NatType
       /\ EnvironmentActorConstant_n > 0

----
\****
\* Variables

Environment_PossibleState ==
   [initialized : BoolType,
    result : NatType,
    factorial : RefType,
    done : BoolType]

Environment_PossibleNewActors ==
   [type : {"Environment"},
    state : Environment_PossibleState,
    id : ActorIDs]

Environment_Invariant(state) ==
   /\ state \in Environment_PossibleState
   /\ \/ state.initialized
      \/ \neg state.done

----
\****
\* Acquaintances

Environment_Acquaintances(state) == 
   IF \neg state.done THEN {state.factorial} ELSE {}

----
\****
\* Init Predicate

Environment_InitPredicate(state) ==
   /\ state.initialized = FALSE
   /\ state.done = FALSE

----
\****
\* Events

Environment_Events ==
   {"init"}

LOCAL Environment_EventInit_Condition(state) ==
   state.initialized = FALSE

LOCAL Environment_EventInit_PossibleNewActors(id, post, pre) ==
   {[type |-> "FactorialStep",
              id |-> NextFreeID(1),
              state |-> [factor |-> EnvironmentActorConstant_n,
                         requester |-> id,
                         initialized |-> FALSE,
                         child |-> AnyRef,
                         done |-> FALSE] ]}

LOCAL Environment_EventInit_PossibleNewMessages(id, post, pre) ==
   {}

LOCAL Environment_EventInit_Predicate(id, post, new, out, pre) ==
   /\ new = {[type |-> "FactorialStep",
              id |-> NextFreeID(1),
              state |-> [factor |-> EnvironmentActorConstant_n,
                         requester |-> id,
                         initialized |-> FALSE,
                         child |-> AnyRef,
                         done |-> FALSE] ]}
   /\ out = {}
   /\ post.initialized = TRUE
   /\ post.factorial = NextFreeID(1)
   /\ post.result = pre.result
   /\ post.done = pre.done


----
LOCAL Environment_Event_Condition(name, state) ==
   CASE name = "init" ->
      Environment_EventInit_Condition(state)

LOCAL Environment_Event_PossibleNewActors(name, id, post, pre) ==
   CASE name = "init" ->
      Environment_EventInit_PossibleNewActors(id, post, pre)

LOCAL Environment_Event_PossibleNewMessages(name, id, post, pre) ==
   CASE name = "init" ->
      Environment_EventInit_PossibleNewMessages(id, post, pre)

LOCAL Environment_Event_Predicate(name, id, post, new, out, pre) ==
   CASE name = "init" ->
      Environment_EventInit_Predicate(id, post, new, out, pre)


----
\****
\* Operations

Environment_Operations ==
   {"result"}

LOCAL Environment_OperationResult_Condition(state, message) ==
   TRUE

LOCAL Environment_OperationResult_PossibleNewActors(id, post, pre, message) ==
   {}

LOCAL Environment_OperationResult_PossibleNewMessages(id, post, pre, message) ==
   {}

LOCAL Environment_OperationResult_Predicate(id, post, new, out, pre, message) ==
   /\ new = {}
   /\ out = {}
   /\ post.initialized = pre.initialized
   /\ post.result = message.body.value
   /\ post.factorial = pre.factorial
   /\ post.done = TRUE


----
LOCAL Environment_Operation_Condition(name, state, message) ==
   CASE name = "result" ->
      Environment_OperationResult_Condition(state, message)

LOCAL Environment_Operation_PossibleNewActors(name, id, post, pre, message) ==
   CASE name = "result" ->
      Environment_OperationResult_PossibleNewActors(id, post, pre, message)

LOCAL Environment_Operation_PossibleNewMessages(name, id, post, pre, message) ==
   CASE name = "result" ->
      Environment_OperationResult_PossibleNewMessages(id, post, pre, message)

LOCAL Environment_Operation_Predicate(name, id, post, new, out, pre, message) ==
   CASE name = "result" ->
      Environment_OperationResult_Predicate(id, post, new, out, pre, message)


----

Environment_Action_Condition(kind, name, state, message) ==
   IF kind = "event"
   THEN
      Environment_Event_Condition(name, state)
   ELSE \* kind = "operation"
      Environment_Operation_Condition(name, state, message)

Environment_Action_PossibleNewActors(kind, name, id, post, pre, message) ==
   IF kind = "event"
   THEN
      Environment_Event_PossibleNewActors(name, id, post, pre)
   ELSE \* kind = "operation"
      Environment_Operation_PossibleNewActors(name, id, post, pre, message)

Environment_Action_PossibleNewMessages(kind, name, id, post, pre, message) ==
   IF kind = "event"
   THEN
      Environment_Event_PossibleNewMessages(name, id, post, pre)
   ELSE \* kind = "operation"
      Environment_Operation_PossibleNewMessages(name, id, post, pre, message)

Environment_Action_Predicate(kind, name, id, post, new, out, pre, message) ==
   IF kind = "event"
   THEN
      Environment_Event_Predicate(name, id, post, new, out, pre)
   ELSE \* kind = "operation"
      /\ name = message.name
      /\ Environment_Operation_Predicate(name, id, post, new, out, pre, message)

====
